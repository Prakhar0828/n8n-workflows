{
  "name": "Multi Agent Telegram Jarvis Prakhar",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }} \nusername-{{ $json.message.chat.first_name }}",
        "options": {
          "systemMessage": "=You are a helpful, smart personal assistant who is tasked to help the user in performing some actions based on the user input. Analyse the input to perform the required set of action.\n\nYou have access to the following tools : Web Search Tool, Email Sender, Slack Message sender, Calendar Agent, Meeting Notes Agent, Telegram_Send_Message\n\nHere are the Rules you must follow:\n1. After you complete the action, you must ALWAYS respond back to the user on telegram using the Telegram_Send_Message tool with requested information, or confirmation of the action completion \n2. You must always look in the contacts database before doing something like creating an event or sending an email. You need the person's email address in order to do one of those actions.\n\n\n3. Never make up someone's email address. You must look in the contacts database tool. \n\nHere is the user input-{{ $json.message.text }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        8,
        -192
      ],
      "id": "4089ba76-755d-41e5-baed-bf2549f71e2f",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4-turbo",
          "mode": "list",
          "cachedResultName": "gpt-4-turbo"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -304,
        32
      ],
      "id": "8eb2c45c-0b5b-4ab3-9ff8-a35575cf1824",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "HjrAM3oUbURXJ8AB",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.message.from.id }}",
        "contextWindowLength": 15
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -176,
        32
      ],
      "id": "3d6f53fa-4d3f-4a57-bffb-a75910c2e980",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "emailType": "text",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -48,
        32
      ],
      "id": "560dc6f4-1d48-46a5-bccf-1db3e74116bc",
      "name": "Email Sender",
      "webhookId": "64a8cbda-33a0-4823-acf2-0e900f87c25d",
      "credentials": {
        "gmailOAuth2": {
          "id": "wkydppyiqkzG27N7",
          "name": "Gmail account 9"
        }
      }
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09980N6K1Q",
          "mode": "list",
          "cachedResultName": "social"
        },
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_Text', ``, 'string') }}",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slackTool",
      "typeVersion": 2.3,
      "position": [
        80,
        32
      ],
      "id": "fec94092-23ad-4e30-be71-87ff8a21eee1",
      "name": "Slack Message Sender",
      "webhookId": "24d2e10c-cb59-4528-a18b-7d889075da2d",
      "credentials": {
        "slackApi": {
          "id": "PhSO7UReEHe6LjuL",
          "name": "Slack account 4"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "prakhar.bafna@gmail.com",
          "mode": "list",
          "cachedResultName": "prakhar.bafna@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "attendees": [
            "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('attendees0_Attendees', ``, 'string') }}"
          ],
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        544,
        240
      ],
      "id": "45752fa5-af98-42d6-ab57-399c608eebb5",
      "name": "Google Calender Event Create",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "rmBzchP5X7R1bmxS",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Query', ``, 'string') }}",
        "options": {}
      },
      "type": "@tavily/n8n-nodes-tavily.tavilyTool",
      "typeVersion": 1,
      "position": [
        208,
        32
      ],
      "id": "d4865f1e-936b-47e6-957f-672199e2331d",
      "name": "Web Search Tool",
      "credentials": {
        "tavilyApi": {
          "id": "CG4jnNQgaiDRgF0U",
          "name": "Tavily account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1pSdrPISb0QHiuXhsq1L2TZsizLZG-qW1NTuXPUTKnak",
          "mode": "list",
          "cachedResultName": "contacts",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1pSdrPISb0QHiuXhsq1L2TZsizLZG-qW1NTuXPUTKnak/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1pSdrPISb0QHiuXhsq1L2TZsizLZG-qW1NTuXPUTKnak/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        336,
        32
      ],
      "id": "fe5b41f3-e1c3-45c4-b73b-402dbe1aa84e",
      "name": "Google Sheet Reader",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "eXOqu1uwNPnwPrQq",
          "name": "Google Sheets account 3"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "prakhar.bafna@gmail.com",
          "mode": "list",
          "cachedResultName": "prakhar.bafna@gmail.com"
        },
        "limit": 30,
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {
          "timeZone": {
            "__rl": true,
            "value": "Asia/Kolkata",
            "mode": "list",
            "cachedResultName": "Asia/Kolkata"
          }
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        672,
        240
      ],
      "id": "262c8919-ac41-4a9e-a5e8-54943c28a89d",
      "name": "Get many events in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "rmBzchP5X7R1bmxS",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "*"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -528,
        -192
      ],
      "id": "0ca39620-afbd-4666-8076-79dc8c07ed3a",
      "name": "Telegram Trigger",
      "webhookId": "7018ad26-1762-45da-8faf-5fb124992bf0",
      "credentials": {
        "telegramApi": {
          "id": "84E0yb6G9dTLdzyt",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Fetches transcript ids for all meetings from fireflies api",
        "method": "POST",
        "url": "https://api.fireflies.ai/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 6089c740-b1d0-48a3-8a27-3fedc346fac7"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "query Transcripts($userId: String) { transcripts(user_id: $userId) { title id } }"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1184,
        240
      ],
      "id": "8eb147c7-b55a-4bab-b593-c8c10f9526ea",
      "name": "Get-Transcripts_ID-Fireflies"
    },
    {
      "parameters": {
        "toolDescription": "Fetches Transcript information for a given transcript id from fireflies",
        "method": "POST",
        "url": "https://api.fireflies.ai/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 6089c740-b1d0-48a3-8a27-3fedc346fac7"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('JSON', ``, 'json') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1312,
        240
      ],
      "id": "bc00aeb4-894d-4f1a-8f91-b86a82e00b0b",
      "name": "Get-Transcript-Info-Fireflies"
    },
    {
      "parameters": {
        "chatId": "={{ $json.message.from.id }}",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegramTool",
      "typeVersion": 1.2,
      "position": [
        464,
        32
      ],
      "id": "6305912f-b261-41a6-aa5c-78a311437e78",
      "name": "Telegram Send Message",
      "webhookId": "39a3fca5-cbbe-437f-a76a-bfe69c25e2b5",
      "credentials": {
        "telegramApi": {
          "id": "84E0yb6G9dTLdzyt",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Agent for performing calendar related tasks",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "=User Input : {{ $json.message.text }}\nYou are a helpful assistant who can help the user with performing calendar-related tasks like setting up a new event/call, checking the calendar for existing events etc\nYou have access to tools for creating google calendar events, getting the calendar events, and checking contacts database for getting email id of the user\n\nAnalyse the user input and use the appropriate tools to perform the task.\n\nRules:\n1. You must always look in the contacts database before doing something like creating an event or sending an email. You need the person's email address in order to do one of those actions.\n\n\n2. Never make up someone's email address. You must look in the contacts database tool. \n\n3. Here is the current date/time: {{ $now }}. This will be useful if user wants you to setup a calendar invite or look into calendar events\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        592,
        32
      ],
      "id": "e2e93055-b7a0-4d21-a741-65e5a69ce064",
      "name": "Calendar Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4-turbo",
          "mode": "list",
          "cachedResultName": "gpt-4-turbo"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        288,
        240
      ],
      "id": "14b6cf9b-2e06-491c-92a4-cc6bdf4d621f",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "HjrAM3oUbURXJ8AB",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.message.from.id }}",
        "contextWindowLength": 15
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        416,
        240
      ],
      "id": "bf9e5394-c0f2-49af-a962-938ca9bc0eb5",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1pSdrPISb0QHiuXhsq1L2TZsizLZG-qW1NTuXPUTKnak",
          "mode": "list",
          "cachedResultName": "contacts",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1pSdrPISb0QHiuXhsq1L2TZsizLZG-qW1NTuXPUTKnak/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1pSdrPISb0QHiuXhsq1L2TZsizLZG-qW1NTuXPUTKnak/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        800,
        240
      ],
      "id": "baca60bb-3696-4119-8770-a9912765f6f6",
      "name": "Contacts Database",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "eXOqu1uwNPnwPrQq",
          "name": "Google Sheets account 3"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "AI Agent that fetches and creates summaries/notes for meetings",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "=User Input :  {{ $json.message.text }}\nYou are a helpful assistant who can fetch meeting transcripts and create meeting notes and summaries, or any other insights about the meetings based on user input. Analyse the user input and perform necessary action\n\nRules:\nIf user wants some insights into meeting recordings, like summary, minutes of the meeting (MOM), notes etc, you should use the fireflies tools strictly in the following order-\nStep 1 -> Call the Get-Transcripts_ID-Fireflies tool to get a list of all available transcript ids and titles of the meeting recordings for the user\nStep 2 -> Based on user input, figure out the transcript id for the meetings that user is interested in.\nStep 3 -> Call the Get-Transcript-Info-Fireflies tool with the extracted transcription-id. This tool will give you the raw transcript, on which you can perform suitable actions like summarization, notes, MOM as per user's input.\nMake sure to put in the below JSON body in the HTTP request of Get-Transcript-Info-Fireflies tool call-\n\n{\n  \"query\": \"query Transcript($transcriptId: String!) { transcript(id: $transcriptId) { id dateString privacy analytics { sentiments { negative_pct neutral_pct positive_pct } categories { questions date_times metrics tasks } speakers { speaker_id name duration word_count longest_monologue monologues_count filler_words questions duration_pct words_per_minute } } speakers { id name } sentences { index speaker_name speaker_id text raw_text start_time end_time ai_filters { task pricing metric question date_and_time text_cleanup sentiment } } title host_email organizer_email calendar_id user { user_id email name num_transcripts recent_meeting minutes_consumed is_admin integrations } fireflies_users participants date transcript_url audio_url video_url duration meeting_attendees { displayName email phoneNumber name location } summary { keywords action_items outline shorthand_bullet overview bullet_gist gist short_summary short_overview meeting_type topics_discussed transcript_chapters } cal_id calendar_type meeting_info { fred_joined silent_meeting summary_status } apps_preview { outputs { transcript_id user_id app_id created_at title prompt response } } meeting_link } }\",\n  \"variables\": {\n    \"transcriptId\": \"<insert the extracted transcription id here>\"\n  }\n}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1104,
        32
      ],
      "id": "9d97dc4b-976c-4b15-a12e-822289025bbd",
      "name": "Meeting Notes Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.message.chat.id }}",
        "contextWindowLength": 15
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1056,
        240
      ],
      "id": "49fd7304-4672-4e04-bdf0-cfeb97cc0aff",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4-turbo",
          "mode": "list",
          "cachedResultName": "gpt-4-turbo"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        928,
        240
      ],
      "id": "c7f4e91e-f43e-41ce-8d46-24ded909b44a",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "HjrAM3oUbURXJ8AB",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Email Sender": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Slack Message Sender": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calender Event Create": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Web Search Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheet Reader": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many events in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get-Transcripts_ID-Fireflies": {
      "ai_tool": [
        [
          {
            "node": "Meeting Notes Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get-Transcript-Info-Fireflies": {
      "ai_tool": [
        [
          {
            "node": "Meeting Notes Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Send Message": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Contacts Database": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Meeting Notes Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "Meeting Notes Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Meeting Notes Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "5e259b9b-13ac-49fc-a1c0-6922bfeaa03b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "836c6b0db29d46f46d100330a5c4f69b7f6240228be65ca7e0973b59108e958b"
  },
  "id": "zUHboHnQ28GyNoo5",
  "tags": []
}
